#!/usr/bin/env python3
"""Módulo de escaneo de vulnerabilidades para Ultra-BugBountyScanner v2.3.

Este módulo contiene la funcionalidad para escanear vulnerabilidades
utilizando nuclei con plantillas de alta y crítica severidad.

Author: Ultra-BugBountyScanner Team
"""

from pathlib import Path

from utils.logger import get_logger
from utils.runner import run_command

# Inicializar logger
logger = get_logger()


def scan_vulnerabilities(domain: str, output_dir: Path, quick_mode: bool) -> None:
    """Fase 4: Escaneo de Vulnerabilidades.
    
    Utiliza nuclei para escanear vulnerabilidades en los activos web
    descubiertos, enfocándose en severidades altas y críticas.
    
    Args:
        domain: Dominio objetivo para escaneo
        output_dir: Directorio base de salida
        quick_mode: Si está habilitado, omite el escaneo de vulnerabilidades
    """
    if quick_mode:
        logger.info("Quick mode enabled, skipping vulnerability scanning")
        return

    logger.info(f"Starting vulnerability scanning for {domain}")
    vulnerabilities_dir = output_dir / domain / "vulnerabilities"
    vulnerabilities_dir.mkdir(parents=True, exist_ok=True)

    # Verificar si existe el archivo de URLs (generado por discover_web_assets)
    urls_file = output_dir / domain / "web" / "httpx_urls.txt"
    if not urls_file.exists():
        logger.warning(f"URLs file not found: {urls_file}")
        return

    # Ejecutar nuclei para escaneo de vulnerabilidades
    nuclei_output = vulnerabilities_dir / "nuclei_results.json"
    nuclei_cmd = [
        "nuclei",
        "-l",
        str(urls_file),
        "-o",
        str(nuclei_output),
        "-json",
        "-severity",
        "high,critical",
        "-silent",
    ]

    logger.debug(f"Running nuclei vulnerability scan for {domain}...")
    run_command(nuclei_cmd)
    logger.success(f"Nuclei vulnerability scan completed for {domain}")